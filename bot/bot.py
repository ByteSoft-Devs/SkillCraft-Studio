import asyncio
import discord
import os
import requests
from discord.ext import commands
from dotenv import load_dotenv

load_dotenv()

intents = discord.Intents.default()

intents.message_content = True
intents.guilds = True

bot = commands.Bot(command_prefix='sc.', intents=intents)

current_status = 0

def stsreqcheck():
    url = "https://api.server-discord.com/v2/bots/{bot_id}/stats"
    headers = {
        'Authorization': "SDC "
    }
    data = {
        'servers': len(bot.guilds),
        'shards': 1,
    }
    r = requests.post(url=url, headers=headers, data=data)
    if r.status_code == 200:
        print(f"[SDC REQ LOG]: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∫–æ–ª-–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ: {len(bot.guilds)}")
    else:
        print(f"[SDC REQ LOG]: –û—à–∏–±–∫–∞ –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–æ–ª-–≤–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤! Code: {r.status_code}")


async def update_status():
    global current_status
    while True:
        if current_status == 0:
            server_count = len(bot.guilds)
            with open('users.txt', 'r') as user_file:
                user_count = len(user_file.readlines())
            status_text = f"{server_count} —Å–µ—Ä–≤–µ—Ä–æ–≤, {user_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
            await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.listening, name=status_text))
            current_status = 1
        else:
            new_status_text = f"/help | /register"
            await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.playing, name=new_status_text))
            current_status = 0
        await asyncio.sleep(30)

@bot.event
async def on_ready():
    for Filename in os.listdir('./cogs'):
        if Filename.endswith('.py'):
            await bot.load_extension(f'cogs.{Filename[:-3]}')
    print(f'{bot.user} –∑–∞–ø—É—â–µ–Ω!')
    print("SkillCraft Studio –≥–æ—Ç–æ–≤!")
    stsreqcheck()
    try:
        synced = await bot.tree.sync()
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ {len(synced)} –∫–æ–º–º–∞–Ω–¥")
        await update_status()
    except Exception as e:
        print(e)


@bot.event
async def on_guild_join(guild):
    system_channel = guild.system_channel
    owner = guild.owner

    if system_channel is not None:
        await system_channel.send("""üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤—Å–µ—Ö!

    üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä SkillCraft Studio! –Ø - —Ç–≤–æ–π –≥–∏–¥ –≤ –º–∏—Ä–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π. ü§ñ‚ú®

    üöÄ –°–æ –º–Ω–æ–π –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –¥–ª—è Aika AI, –¥–µ–ª–∞—è –µ—ë —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –µ—â—ë –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–µ–µ.

    üõ†Ô∏è –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /register –∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º. –ï—Å–ª–∏ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å OpenAI API –∫–ª—é—á, —Ç–æ —É–∫–∞–∂–∏ –µ–≥–æ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ê –µ—Å–ª–∏ –Ω–µ—Ç, –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.

    üîë –ï—Å–ª–∏ API –∫–ª—é—á –≤—ã–∑—ã–≤–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /buy-key. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–ª—é—á –∏ –Ω–∞—á–∞—Ç—å —Å–≤–æ—ë —Ç–≤–æ—Ä—á–µ—Å–∫–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –º–∏—Ä–µ –¥–∏–∞–ª–æ–≥–æ–≤ —Å –±–æ—Ç–æ–º.

    –ù–µ —É–ø—É—Å—Ç–∏ —Å–≤–æ–π —à–∞–Ω—Å —Å–æ–∑–¥–∞—Ç—å –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–µ –Ω–∞–≤—ã–∫–∏, –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º –∏ —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. –î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –æ–±—â–µ–Ω–∏–µ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –¥–ª—è –≤—Å–µ—Ö! üåàüöÄ""")
    else:
        await owner.send("""üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤—Å–µ—Ö!

    üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä SkillCraft Studio! –Ø - —Ç–≤–æ–π –≥–∏–¥ –≤ –º–∏—Ä–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π. ü§ñ‚ú®

    üöÄ –°–æ –º–Ω–æ–π –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –¥–ª—è Aika AI, –¥–µ–ª–∞—è –µ—ë —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –µ—â—ë –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–µ–µ.

    üõ†Ô∏è –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /register –∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º. –ï—Å–ª–∏ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å OpenAI API –∫–ª—é—á, —Ç–æ —É–∫–∞–∂–∏ –µ–≥–æ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ê –µ—Å–ª–∏ –Ω–µ—Ç, –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.

    üîë –ï—Å–ª–∏ API –∫–ª—é—á –≤—ã–∑—ã–≤–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /buy-key. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–ª—é—á –∏ –Ω–∞—á–∞—Ç—å —Å–≤–æ—ë —Ç–≤–æ—Ä—á–µ—Å–∫–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –º–∏—Ä–µ –¥–∏–∞–ª–æ–≥–æ–≤ —Å –±–æ—Ç–æ–º.

    –ù–µ —É–ø—É—Å—Ç–∏ —Å–≤–æ–π —à–∞–Ω—Å —Å–æ–∑–¥–∞—Ç—å –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–µ –Ω–∞–≤—ã–∫–∏, –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º –∏ —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. –î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –æ–±—â–µ–Ω–∏–µ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –¥–ª—è –≤—Å–µ—Ö! üåàüöÄ""")

@bot.command(name="ping")
async def ban(ctx):
    await ctx.send("–ü–æ–Ω–≥")


@bot.command(name="ban")
async def ban(ctx, user_id: int, reason: str):
    with open('admins.txt', 'r') as file:
        admin_ids = [int(line.strip()) for line in file.readlines()]

    if ctx.author.id in admin_ids:
        with open('blocked_users.txt', 'a') as file:
            file.write(f"{user_id}\n")

        user = await bot.fetch_user(user_id)
        await user.send(f'**–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ SkillCraft Studio –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –ü—Ä–∏—á–∏–Ω–∞:** {reason}')

        await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    else:
        await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.")


@bot.command(name="unban")
async def unban(ctx, user_id: int):
    with open('admins.txt', 'r') as file:
        admin_ids = [int(line.strip()) for line in file.readlines()]

    if ctx.author.id in admin_ids:
        with open('blocked_users.txt', 'r') as file:
            blocked_users = [line.strip() for line in file.readlines()]

        if str(user_id) in blocked_users:
            blocked_users.remove(str(user_id))
            with open('blocked_users.txt', 'w') as file:
                for user in blocked_users:
                    file.write(f"{user}\n")

            user = await bot.fetch_user(user_id)
            await user.send('**–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ SkillCraft Studio –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.**')

            await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
        else:
            await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    else:
        await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.")


@bot.command(name="addcode")
async def addcode(ctx, *, text):
    with open('codes.txt', 'a') as file:
        file.write(f"{text}\n")
    await ctx.send(f"–ö–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫")


@bot.command(name="addkey")
async def addkeys(ctx, key):
    with open('keys.txt', 'a') as file:
        file.write(f"{key}\n")
    await ctx.send(f"OpenAI API –∫–ª—é—á –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–∫–æ")


if __name__ == '__main__':
    bot.run(os.getenv("DISCORD_BOT_TOKEN"))